 /* ==========================================================================
   Variables
   ========================================================================== */

   $blue: #237a9a;
   $pink: #aa418c;


   /* ==========================================================================
      Base styles: opinionated defaults
      ========================================================================== */

   @import url('https://fonts.googleapis.com/css?family=Gotu|Lato|Lora|Montserrat|Roboto');
   :root {
     --d: 700ms;
     --e: cubic-bezier(0.19, 1, 0.22, 1);
     --font-sans: 'Lato', sans-serif;
     --font-serif: 'Gotu', serif;
   }


   html, body {
     scroll-behavior: smooth;
   }

   * {
     font-family: 'Gotu', 'Lora', serif;
     margin: 0;
     padding: 0;
     scroll-behavior: smooth;
   }

   *:focus {
     outline: none;
   }

   ::-moz-selection {
       color: #eee;
       background: rgba(170,65,140,0.8);
       text-shadow: none;
   }

   ::selection {
       color: #eee;
       background: rgba(170,65,140,0.8);
       text-shadow: none;
   }

   input {
     outline: none;
     border: none;
   }

   input:focus,
   select:focus,
   textarea:focus,
   button:focus,
   button:active {
       outline: none;
   }

   hr {
       display: block;
       height: 1px;
       width: 60%;
       border: 0;
       border-top: 1px solid #ddd;
       margin: 1em 0;
       padding: 0;
   }

   audio,
   canvas,
   iframe,
   img,
   svg,
   video {
       vertical-align: middle;
   }

   fieldset {
       border: 0;
       margin: 0;
       padding: 0;
   }

   textarea {
       resize: vertical;
       outline: none;
       border: none;
   }

   ul,
   ul li,
   ul ul li {
      margin: 0;
      padding: 0;
      text-indent: 0;
      list-style-type: none;
   }

   p {
     margin: 0;
     padding: 0;
   }

   a {
     text-decoration: none;
     color: $blue;
   }

   a:hover {
     text-decoration: none;
     color: #333;
   }



   /* ==========================================================================
      Helper classes
      ========================================================================== */

   .browserupgrade {
       margin: 0.2em 0;
       background: #ccc;
       color: #000;
       padding: 0.2em 0;
   }

   .engraved {
       background-color: #333;
       -webkit-background-clip: text;
       -moz-background-clip: text;
       background-clip: text;
       color: transparent;
       text-shadow: rgba(245,245,245,0.5) 1px 1px 1px;
    }

   .embossed{
     color: #f0f0f0;
     background-color: #666666;
     text-shadow: 1px 2px 2px #555;
     text-align: center;
     -webkit-background-clip: text;
     -moz-background-clip: text;
   }

   /*
    * Hide visually and from screen readers
    */

    .hidden {
     display: none !important;
   }

   /*
   * Hide only visually, but have it available for screen readers:
   * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
   *
   * 1. For long content, line feeds are not interpreted as spaces and small width
   *    causes content to wrap 1 word per line:
   *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
   */

   .visuallyhidden {
     border: 0;
     clip: rect(0 0 0 0);
     height: 1px;
     margin: -1px;
     overflow: hidden;
     padding: 0;
     position: absolute;
     width: 1px;
     white-space: nowrap; /* 1 */
   }

   /*
   * Extends the .visuallyhidden class to allow the element
   * to be focusable when navigated to via the keyboard:
   * https://www.drupal.org/node/897638
   */

   .visuallyhidden.focusable:active,
   .visuallyhidden.focusable:focus {
     clip: auto;
     height: auto;
     margin: 0;
     overflow: visible;
     position: static;
     width: auto;
     white-space: inherit;
   }

   /*
   * Hide visually and from screen readers, but maintain layout
   */

   .invisible {
     visibility: hidden;
   }

   /*
   * Clearfix: contain floats
   *
   * For modern browsers
   * 1. The space content is one way to avoid an Opera bug when the
   *    `contenteditable` attribute is included anywhere else in the document.
   *    Otherwise it causes space to appear at the top and bottom of elements
   *    that receive the `clearfix` class.
   * 2. The use of `table` rather than `block` is only necessary if using
   *    `:before` to contain the top-margins of child elements.
   */

   .clearfix:before,
   .clearfix:after {
     content: " "; /* 1 */
     display: table; /* 2 */
   }

   .clearfix:after {
     clear: both;
   }
